3.1 Introduction
The program can decide which statements to execute based on a condition

3.2 boolean Data Type
The boolean data type declares a variable with the value either true or false.

3.3 if Statements
An if statement is a construct that enables a program to specify alternative paths of execution.

3.4 Two-Way if-else Statements
An if-else statement decides the execution path based on whether the condition is
true or false

3.5 Nested if and Multi-Way if-else Statements
An if statement can be inside another if statement to form a nested if statement

3.6 Common Errors and Pitfalls
Forgetting necessary braces, ending an if statement in the wrong place, mistaking ==
for =, and dangling else clauses are common errors in selection statements.
Duplicated statements in if-else statements and testing equality of double values
are common pitfalls.

3.7 Generating Random Numbers
You can use Math.random() to obtain a random double value between 0.0 and 1.0,
excluding 1.0

3.8 Case Study: Computing Body Mass Index
You can use nested if statements to write a program that interprets body mass index

3.9 Case Study: Computing Taxes
You can use nested if statements to write a program for computing taxes.

3.10 Logical Operators
The logical operators !, &&, ||, and ^ can be used to create a compound Boolean
expression

3.11 Case Study: Determining Leap Year
A year is a leap year if it is divisible by 4 but not by 100, or if it is divisible by 400
boolean isLeapYear = (year % 4 ==0 && year % 100 != 0) || (year % 400 ==0);

3.12 Case Study: Lottery
The lottery program involves generating random numbers, comparing digits, and
using Boolean operators.

3.13 switch Statements
A switch statement executes statements based on the value of a variable or an
expression

3.14 Conditional Expressions
A conditional expression evaluates an expression based on a condition

y = (x > 0) ? 1 : -1;

3.15 Operator Precedence and Associativity
Operator precedence and associativity determine the order in which operators are
evaluated

Precedence Operator:
var++ and var–– (Postfix)
+, – (Unary plus and minus), ++var and ––var (Prefix)
(type) (Casting)
!(Not)
*, /, % (Multiplication, division, and remainder)
+, – (Binary addition and subtraction)
<, <=, >, >= (Relational)
==, != (Equality)
^ (Exclusive OR)
&& (AND)
|| (OR)
=, +=, –=, *=, /=, %= (Assignment operator)


3.16 Debugging
Debugging is the process of finding and fixing errors in a program.

- Executing a single statement at a time
- Tracing into or stepping over a method
